type ListItem = Int | ((ListItem -> ListItem -> ListItem) -> ListItem)

cons x: ListItem, y: ListItem, f: ListItem -> ListItem -> ListItem = f x y
truefn x: ListItem, y: ListItem = x
falsefn x: ListItem, y: ListItem = y
car list: (ListItem -> ListItem -> ListItem) -> ListItem = list truefn
cdr list: (ListItem -> ListItem -> ListItem) -> ListItem = list falsefn

list = cons 1 (cons 2 3)
debug (car list)
debug (cdr list)
